NAME
	Changelog for Pythinux 3.0
NEW/REMOVED PROGRAMS
	- New libraries:
		- libsemver
			Handles semantic versions. Used by pkm and installd.
		- liblog
			Basic logging framework.
		- libconfig
			Create config files easily with configparser.
		- libtime
			Display the time in a standardised format.
	- New programs:
		- shell
			Replacement for terminal.
		- bterm
			Replacement for basic-terminal.
		- exec
			Passes commands directly into runCommand(), bypassing the shell
			entirely.
		- rcview
			View your user's rc file.
		- rcadd
			Add a command to your user's rc file.
		- rcrm
			Removes a line from your user's rc file.
		- ping
			Implementation of the UNIX ping utility in Pythinux.
		- curl
			Prints the contents of Internet files to the terminal.
	- Removed programs:
		- initd
			Is no longer needed: `shell` now handles initialisation.
		- tutorial
			Was bad and outdated.
THE MAIN() FUNCTION
	Every program now requires a main() function, similar to how C/C++
	programs operate. This function is called by load_program(), unless you
	pass libMode=True to it (see BETTER LIBRARY SUPPORT). This does lead to
	exactly one API-breaking change: `main()` has been moved to
	`runCommand()`, which is arguably less confusing as it suggests it has
	less importance than it used to.

	The main function does have `args` passed into it, so an empty main()
	looks like this:

	def main(args):
		pass
BETTER LIBRARY SUPPORT
	The load_program() function has a `libMode` argument, which is False by
	default. When set to True, however, it does two things:

	1. The aforementioned main function is not called.
	2. The scope for loadable programs is extended to allow for libraries to
	be loaded.

	Extra directories (/system_lib for system libraries, /lib and /lib_high
	for installed ones) have been added for use as libraries only. This cleans
	up the help menu, which does not show these libraries.

	There are several default libraries (See lib manual)
REAL DIRECTORY SUPPORT
	Pythinux programs no longer operate in just the root directory! Thanks to
	functions like file.evalDir(), programs can change to any directory they
	want. 
RC FILES
	Located in /home/<username>/shellrc.xx is a shell script that is run every
	time the shell loads a program.
SECURITY IMPROVEMENTS
	The all-new Pythinux Security Advisory caught some old, severe exploits in
	Pythinux, all of which were caught, patched, and documented on the
	Pythinux Wiki (https://wiki.pythinux.gordinator.org).
KERNEL PARAMETERS (KPARAMS)
	A kernel parameter, or KPARAM, is a variable set in the pythinux.py file,
	AKA the kernel. They are designed to be modified by users, and cannot be
	viewed or edited by any program, not even system ones. This is because
	some parameters define security measures, therefore it should be
	impossible to edit this way.

	A list of kernel parameters can be viewed here: https://wiki.pythinux.gordinator.org/doku.php?id=docs:kparam
UPDATED PACKAGING FORMAT
	An all-new packaging format has replced the admittedly dated one used in
	older versions of Pythinux. It uses an INI file as a config, and is highly
	flexible and extensible. It also allows for arbitrary files to be copied.
PYTHINUX UPDATE FRAMEWORK
	The Pythinux Update Framework (PUF) is <insert info once done>.
BETTER MAN PAGES
	- Man pages now have sections denoting things like syntax and library
	documentation.
	- Every program has a man page.
SEE ALSO:
	lib: list of built-in libraries
